var jsdom = require('jsdom');
/*******************************************************************************
 * Introduction
 * *****************************************************************************
 * Tests if jQuery.ColorPicker functions currectly as a node module.
 * Currently uses jQuery 1.11.1 as this package is setup based out of
 * necessity for a work project.
 *
 * DATE:    January 28, 2015
 * AUTHOR:  Jay Zawrotny <jay@venuebook.com>
 *
 * NUMBER OF TESTS: 3
 * NUMBER OF ASSERTIONS: 4
 **/
describe('jQuery Colorpicker: DOM', function() {
    it('Launched JS DOM', function(done) {
        jsdom.env({
            html: '<div id="main"></div>',
            done: function(errors, window) {
                domReady(errors, window);
                done();
            }
        });
    });
});

function domReady(errors, window) {
  global.window = window;

  var $ = require('jquery'),
      _ = require('underscore'),
      _f = require('util').format;
      assert = require('assert');

  // Require our module
  require('../index.js');

  describe('jQuery.ColorPicker', function () {
    it('should exist as a jquery object', function () {
      assert.notEqual($.fn.ColorPicker, undefined, '$.fn.ColorPicker should probably exist >_>');
    });

    it('should be a function', function () {
      assert.equal(_.isFunction($.fn.ColorPicker), true, '$.fn.ColorPicker was is not a function.');
    });

    it('should add some UI to the DOM', function() {
      var actual = {},
        expected = {},
        output, j;

      $(window.document.body).html('<div class="colorpicker-test"><input type="text" name="color" class="colorpicker" /></div>');
      $('.colorpicker').ColorPicker();

      output = $(window.document.body).html();
      
      // Determines that we have our original colorpicker markup
      actual.cps = $('.colorpicker').length;

      // Determines new markup has been generated by colorpicker
      actual.cp_c = $('.colorpicker_color').length;

      expected.cps = 2;
      expected.cp_c = 1;

      assert.equal(actual.cps, expected.cps, _f('Could not find element with class="colorpicker". Found %s. Output: %s', actual.cps, output));
      assert.equal(actual.cp_c, expected.cp_c, _f('Could not find element with class="colorpicker_color". Found %s. Output: %s', actual.cp_c, output));
    });
  });
}

